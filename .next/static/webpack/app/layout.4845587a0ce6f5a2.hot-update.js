"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"3bbad6f55a9a\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzg5YmYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIzYmJhZDZmNTVhOWFcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/ScrollReveal.tsx":
/*!****************************************!*\
  !*** ./components/ui/ScrollReveal.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ScrollReveal; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n/**\r\n * Site-wide scroll reveal: progressive enhancement, resilient.\r\n * - Default CSS keeps content visible (see globals.css).\r\n * - We only add the animation when JS is present and IO works.\r\n * - If IO isn't supported or errors, we force everything visible.\r\n */ function ScrollReveal() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _window_matchMedia, _window_matchMedia1, _window;\n        const nodes = Array.from(document.querySelectorAll(\".reveal-base\"));\n        if (!nodes.length) return;\n        // If reduced motion or no IO: reveal immediately\n        const prefersReduce = (_window_matchMedia1 = (_window = window).matchMedia) === null || _window_matchMedia1 === void 0 ? void 0 : (_window_matchMedia = _window_matchMedia1.call(_window, \"(prefers-reduced-motion: reduce)\")) === null || _window_matchMedia === void 0 ? void 0 : _window_matchMedia.matches;\n        if (!(\"IntersectionObserver\" in window) || prefersReduce) {\n            nodes.forEach((n)=>n.classList.add(\"reveal-in\"));\n            return;\n        }\n        let io = null;\n        try {\n            io = new IntersectionObserver((entries)=>{\n                for (const e of entries){\n                    if (e.isIntersecting) {\n                        e.target.classList.add(\"reveal-in\");\n                        io.unobserve(e.target);\n                    }\n                }\n            }, {\n                threshold: 0.12\n            });\n            nodes.forEach((n)=>io.observe(n));\n            // Watch for new elements after client navigation\n            const mo = new MutationObserver((muts)=>{\n                for (const m of muts){\n                    m.addedNodes.forEach((ad)=>{\n                        var _ad_matches, _ad_querySelectorAll;\n                        if (!(ad instanceof HTMLElement)) return;\n                        if ((_ad_matches = ad.matches) === null || _ad_matches === void 0 ? void 0 : _ad_matches.call(ad, \".reveal-base\")) io.observe(ad);\n                        (_ad_querySelectorAll = ad.querySelectorAll) === null || _ad_querySelectorAll === void 0 ? void 0 : _ad_querySelectorAll.call(ad, \".reveal-base\").forEach((el)=>io.observe(el));\n                    });\n                }\n            });\n            mo.observe(document.body, {\n                subtree: true,\n                childList: true\n            });\n            return ()=>{\n                io === null || io === void 0 ? void 0 : io.disconnect();\n                mo.disconnect();\n            };\n        } catch (e) {\n            nodes.forEach((n)=>n.classList.add(\"reveal-in\"));\n        }\n    }, []);\n    return null;\n}\n_s(ScrollReveal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ScrollReveal;\nvar _c;\n$RefreshReg$(_c, \"ScrollReveal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvU2Nyb2xsUmV2ZWFsLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRWtDO0FBRWxDOzs7OztDQUtDLEdBQ2MsU0FBU0M7O0lBQ3RCRCxnREFBU0EsQ0FBQztZQUtjRSxvQkFBQUEscUJBQUFBO1FBSnRCLE1BQU1DLFFBQVFDLE1BQU1DLElBQUksQ0FBQ0MsU0FBU0MsZ0JBQWdCLENBQWM7UUFDaEUsSUFBSSxDQUFDSixNQUFNSyxNQUFNLEVBQUU7UUFFbkIsaURBQWlEO1FBQ2pELE1BQU1DLGlCQUFnQlAsc0JBQUFBLENBQUFBLFVBQUFBLFFBQU9RLFVBQVUsY0FBakJSLDJDQUFBQSxxQkFBQUEseUJBQUFBLFNBQW9CLGlEQUFwQkEseUNBQUFBLG1CQUF5RFMsT0FBTztRQUN0RixJQUFJLENBQUUsMkJBQTBCVCxNQUFLLEtBQU1PLGVBQWU7WUFDeEROLE1BQU1TLE9BQU8sQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxTQUFTLENBQUNDLEdBQUcsQ0FBQztZQUNyQztRQUNGO1FBRUEsSUFBSUMsS0FBa0M7UUFFdEMsSUFBSTtZQUNGQSxLQUFLLElBQUlDLHFCQUNQLENBQUNDO2dCQUNDLEtBQUssTUFBTUMsS0FBS0QsUUFBUztvQkFDdkIsSUFBSUMsRUFBRUMsY0FBYyxFQUFFO3dCQUNuQkQsRUFBRUUsTUFBTSxDQUFpQlAsU0FBUyxDQUFDQyxHQUFHLENBQUM7d0JBQ3hDQyxHQUFJTSxTQUFTLENBQUNILEVBQUVFLE1BQU07b0JBQ3hCO2dCQUNGO1lBQ0YsR0FDQTtnQkFBRUUsV0FBVztZQUFLO1lBR3BCcEIsTUFBTVMsT0FBTyxDQUFDLENBQUNDLElBQU1HLEdBQUlRLE9BQU8sQ0FBQ1g7WUFFakMsaURBQWlEO1lBQ2pELE1BQU1ZLEtBQUssSUFBSUMsaUJBQWlCLENBQUNDO2dCQUMvQixLQUFLLE1BQU1DLEtBQUtELEtBQU07b0JBQ3BCQyxFQUFFQyxVQUFVLENBQUNqQixPQUFPLENBQUMsQ0FBQ2tCOzRCQUVoQkEsYUFDSkE7d0JBRkEsSUFBSSxDQUFFQSxDQUFBQSxjQUFjQyxXQUFVLEdBQUk7d0JBQ2xDLEtBQUlELGNBQUFBLEdBQUduQixPQUFPLGNBQVZtQixrQ0FBQUEsaUJBQUFBLElBQWEsaUJBQWlCZCxHQUFJUSxPQUFPLENBQUNNO3lCQUM5Q0EsdUJBQUFBLEdBQUd2QixnQkFBZ0IsY0FBbkJ1QiwyQ0FBQUEsMEJBQUFBLElBQXNCLGdCQUFnQmxCLE9BQU8sQ0FBQyxDQUFDb0IsS0FBT2hCLEdBQUlRLE9BQU8sQ0FBQ1E7b0JBQ3BFO2dCQUNGO1lBQ0Y7WUFDQVAsR0FBR0QsT0FBTyxDQUFDbEIsU0FBUzJCLElBQUksRUFBRTtnQkFBRUMsU0FBUztnQkFBTUMsV0FBVztZQUFLO1lBRTNELE9BQU87Z0JBQ0xuQixlQUFBQSx5QkFBQUEsR0FBSW9CLFVBQVU7Z0JBQ2RYLEdBQUdXLFVBQVU7WUFDZjtRQUNGLEVBQUUsVUFBTTtZQUNOakMsTUFBTVMsT0FBTyxDQUFDLENBQUNDLElBQU1BLEVBQUVDLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDO1FBQ3ZDO0lBQ0YsR0FBRyxFQUFFO0lBRUwsT0FBTztBQUNUO0dBbkR3QmQ7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy91aS9TY3JvbGxSZXZlYWwudHN4P2JlZjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbi8qKlxyXG4gKiBTaXRlLXdpZGUgc2Nyb2xsIHJldmVhbDogcHJvZ3Jlc3NpdmUgZW5oYW5jZW1lbnQsIHJlc2lsaWVudC5cclxuICogLSBEZWZhdWx0IENTUyBrZWVwcyBjb250ZW50IHZpc2libGUgKHNlZSBnbG9iYWxzLmNzcykuXHJcbiAqIC0gV2Ugb25seSBhZGQgdGhlIGFuaW1hdGlvbiB3aGVuIEpTIGlzIHByZXNlbnQgYW5kIElPIHdvcmtzLlxyXG4gKiAtIElmIElPIGlzbid0IHN1cHBvcnRlZCBvciBlcnJvcnMsIHdlIGZvcmNlIGV2ZXJ5dGhpbmcgdmlzaWJsZS5cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNjcm9sbFJldmVhbCgpIHtcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3Qgbm9kZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGw8SFRNTEVsZW1lbnQ+KFwiLnJldmVhbC1iYXNlXCIpKTtcclxuICAgIGlmICghbm9kZXMubGVuZ3RoKSByZXR1cm47XHJcblxyXG4gICAgLy8gSWYgcmVkdWNlZCBtb3Rpb24gb3Igbm8gSU86IHJldmVhbCBpbW1lZGlhdGVseVxyXG4gICAgY29uc3QgcHJlZmVyc1JlZHVjZSA9IHdpbmRvdy5tYXRjaE1lZGlhPy4oXCIocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKVwiKT8ubWF0Y2hlcztcclxuICAgIGlmICghKFwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXJcIiBpbiB3aW5kb3cpIHx8IHByZWZlcnNSZWR1Y2UpIHtcclxuICAgICAgbm9kZXMuZm9yRWFjaCgobikgPT4gbi5jbGFzc0xpc3QuYWRkKFwicmV2ZWFsLWluXCIpKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBpbzogSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgfCBudWxsID0gbnVsbDtcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICBpbyA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihcclxuICAgICAgICAoZW50cmllcykgPT4ge1xyXG4gICAgICAgICAgZm9yIChjb25zdCBlIG9mIGVudHJpZXMpIHtcclxuICAgICAgICAgICAgaWYgKGUuaXNJbnRlcnNlY3RpbmcpIHtcclxuICAgICAgICAgICAgICAoZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQpLmNsYXNzTGlzdC5hZGQoXCJyZXZlYWwtaW5cIik7XHJcbiAgICAgICAgICAgICAgaW8hLnVub2JzZXJ2ZShlLnRhcmdldCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHsgdGhyZXNob2xkOiAwLjEyIH1cclxuICAgICAgKTtcclxuXHJcbiAgICAgIG5vZGVzLmZvckVhY2goKG4pID0+IGlvIS5vYnNlcnZlKG4pKTtcclxuXHJcbiAgICAgIC8vIFdhdGNoIGZvciBuZXcgZWxlbWVudHMgYWZ0ZXIgY2xpZW50IG5hdmlnYXRpb25cclxuICAgICAgY29uc3QgbW8gPSBuZXcgTXV0YXRpb25PYnNlcnZlcigobXV0cykgPT4ge1xyXG4gICAgICAgIGZvciAoY29uc3QgbSBvZiBtdXRzKSB7XHJcbiAgICAgICAgICBtLmFkZGVkTm9kZXMuZm9yRWFjaCgoYWQpID0+IHtcclxuICAgICAgICAgICAgaWYgKCEoYWQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHJldHVybjtcclxuICAgICAgICAgICAgaWYgKGFkLm1hdGNoZXM/LihcIi5yZXZlYWwtYmFzZVwiKSkgaW8hLm9ic2VydmUoYWQpO1xyXG4gICAgICAgICAgICBhZC5xdWVyeVNlbGVjdG9yQWxsPy4oXCIucmV2ZWFsLWJhc2VcIikuZm9yRWFjaCgoZWwpID0+IGlvIS5vYnNlcnZlKGVsIGFzIEVsZW1lbnQpKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgIG1vLm9ic2VydmUoZG9jdW1lbnQuYm9keSwgeyBzdWJ0cmVlOiB0cnVlLCBjaGlsZExpc3Q6IHRydWUgfSk7XHJcblxyXG4gICAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICAgIGlvPy5kaXNjb25uZWN0KCk7XHJcbiAgICAgICAgbW8uZGlzY29ubmVjdCgpO1xyXG4gICAgICB9O1xyXG4gICAgfSBjYXRjaCB7XHJcbiAgICAgIG5vZGVzLmZvckVhY2goKG4pID0+IG4uY2xhc3NMaXN0LmFkZChcInJldmVhbC1pblwiKSk7XHJcbiAgICB9XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gbnVsbDtcclxufVxyXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwiU2Nyb2xsUmV2ZWFsIiwid2luZG93Iiwibm9kZXMiLCJBcnJheSIsImZyb20iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJwcmVmZXJzUmVkdWNlIiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJmb3JFYWNoIiwibiIsImNsYXNzTGlzdCIsImFkZCIsImlvIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJlbnRyaWVzIiwiZSIsImlzSW50ZXJzZWN0aW5nIiwidGFyZ2V0IiwidW5vYnNlcnZlIiwidGhyZXNob2xkIiwib2JzZXJ2ZSIsIm1vIiwiTXV0YXRpb25PYnNlcnZlciIsIm11dHMiLCJtIiwiYWRkZWROb2RlcyIsImFkIiwiSFRNTEVsZW1lbnQiLCJlbCIsImJvZHkiLCJzdWJ0cmVlIiwiY2hpbGRMaXN0IiwiZGlzY29ubmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/ScrollReveal.tsx\n"));

/***/ })

});